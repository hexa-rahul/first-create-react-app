{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Rahul/qa_reactjs/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#cccccc';\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = '#808080';\n      showAlert('Light mode has been enabled', 'danger');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"ReactJs Header\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: \"This is Alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      title: \"Enter Message What You Want?\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Alert","Navbar","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahul/Rahul/qa_reactjs/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#cccccc';\n      showAlert('Dark mode has been enabled', 'success');\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = '#808080';\n      showAlert('Light mode has been enabled', 'danger');\n    }\n  } \n  return (\n    <>\n      <Navbar title=\"ReactJs Header\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert=\"This is Alert\" />\n      <TextForm title=\"Enter Message What You Want?\" mode={mode} />\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAK;IAClCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACD,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAGR,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MAAI;MACHH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,6BAA6B,EAAE,QAAQ,CAAC;IACpD;EACF,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACH,MAAM;MAACsB,KAAK,EAAC,gBAAgB;MAACd,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrEvB,OAAA,CAACJ,KAAK;MAACW,KAAK,EAAC;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/BvB,OAAA,CAACF,QAAQ;MAACqB,KAAK,EAAC,8BAA8B;MAACd,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAE5D;AAEP;AAACnB,EAAA,CA9BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}